//Nitin Singh
//21105117

#include <iostream>                   
using namespace std;                  
class Nd{
    public:   
    string name;
    int age;
    Nd*next; 
    Nd*previous;    
    Nd(string name,int age){
        this->name=name;
        this->age=age;
        next=NULL; 
        previous=NULL; 
    }
};

void append(Nd* &head,string name,int age){
    Nd*temp=head;    
    Nd*newNd=new Nd(name,age);   
    if(temp==NULL){
        head=newNd;
    }
    else{
        while(temp->next!=NULL){temp=temp->next;}
        temp->next=newNd;
        newNd->previous=temp;
    }
}

void insert(Nd*&head,string name,int age){
    
    Nd*newNd=new Nd(name,age);
    
    newNd->next=head;
    head->previous=newNd;
    head=newNd;
}

void display1(Nd*head){
    Nd*temp=head;
    while(temp!=NULL){cout<<"[Name:"<<temp->name<<" Age:"<<temp->age<<"]"<<"--";temp=temp->next;}
    cout<<endl;
}

void display2(Nd*head){
    Nd*temp=head;
    while(temp->next!=NULL){temp=temp->next;}
    while(temp!=NULL){cout<<"[Name:"<<temp->name<<" Age:"<<temp->age<<"]"<<"--";temp=temp->previous;}
    cout<<endl;
}

void delete_index(Nd*&head,int i){
    if(i==0){
        Nd*temp=head;
        head=temp->next;
        head->previous=NULL;
        delete temp;
    }
    else{
        Nd*temp=head;
        for(int j=0;j<i;j++){temp=temp->next;}
        temp->previous->next=temp->next;
        temp->next->previous=temp->previous;
        delete temp;
    }
}

void pop(Nd*&head){
    Nd*temp=head;
    while(temp->next!=NULL){temp=temp->next;}
    temp->previous->next=NULL;
    delete temp;
}

int main(){   
    
    Nd*head=NULL;
	int people;   
	cout<<"Number of Members: ";
    cin>>people;    
	for(int i=1;i<=people;i++){
		string name;
		int age;
		cout<<"Name "<<i<<":";
        cin>>name;
		cout<<"Age "<<i<<":";
        cin>>age;
        
		append(head,name,age);
	}
    cout<<endl;   
    cout<<"Result"<<endl;
    cout<<endl;
    display1(head);
}

// Bonus Question
// We can link members in a family according to their ages for example,younger at tail and elder at head.
